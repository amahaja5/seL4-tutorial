/* @LICENSE(NICTA) */

/* This header was generated by kernel/tools/syscall_header_gen.py.
 *
 * To add a system call number, edit kernel/include/api/syscall.xml
 *
 */
#ifndef __LIBSEL4_SYSCALL_H
#define __LIBSEL4_SYSCALL_H

#include <autoconf.h>

typedef enum {
    seL4_SysCall = -1,
    seL4_SysReplyRecv = -2,
    seL4_SysSend = -3,
    seL4_SysNBSend = -4,
    seL4_SysRecv = -5,
    seL4_SysReply = -6,
    seL4_SysYield = -7,
    seL4_SysNBRecv = -8,
#if defined CONFIG_PRINTING
    seL4_SysDebugPutChar = -9,
#endif /* defined CONFIG_PRINTING */
#if defined CONFIG_DEBUG_BUILD
    seL4_SysDebugHalt = -10,
    seL4_SysDebugCapIdentify = -11,
    seL4_SysDebugSnapshot = -12,
#endif /* defined CONFIG_DEBUG_BUILD */
#if defined CONFIG_DEBUG_BUILD
    seL4_SysDebugNameThread = -13,
#endif /* defined CONFIG_DEBUG_BUILD */
#if defined CONFIG_DANGEROUS_CODE_INJECTION
    seL4_SysDebugRun = -14,
#endif /* defined CONFIG_DANGEROUS_CODE_INJECTION */
#if defined CONFIG_ENABLE_BENCHMARKS
    seL4_SysBenchmarkFlushCaches = -15,
    seL4_SysBenchmarkResetLog = -16,
    seL4_SysBenchmarkFinalizeLog = -17,
    seL4_SysBenchmarkSetLogBuffer = -18,
    seL4_SysBenchmarkNullSyscall = -19,
#endif /* defined CONFIG_ENABLE_BENCHMARKS */
#if defined CONFIG_BENCHMARK_TRACK_UTILISATION
    seL4_SysBenchmarkGetThreadUtilisation = -20,
    seL4_SysBenchmarkResetThreadUtilisation = -21,
#endif /* defined CONFIG_BENCHMARK_TRACK_UTILISATION */
#if defined CONFIG_VTX
    seL4_SysVMEnter = -22,
#endif /* defined CONFIG_VTX */
    SEL4_FORCE_LONG_ENUM(seL4_Syscall_ID)
} seL4_Syscall_ID;

#endif /* __ARCH_API_SYSCALL_H */
